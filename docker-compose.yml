version: '3.7'

#volumes:
#    prometheus_data: {}
#    grafana_data: {}

networks:
  tracing-net:

services:

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.prometheus.entrypoints=http"
      - "traefik.http.routers.prometheus.rule=Host(`prometheus.tracing.ВАШ%ДОМЕН.local`)"
      - "traefik.docker.network=tracing-net"
      - "traefik.port=80"
    volumes:
      - ./prometheus:/etc/prometheus/
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
    ports:
      - 9090:9090
      - 9091:9091
    networks:
      - tracing-net
    restart: always

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.grafana.entrypoints=http"
      - "traefik.http.routers.grafana.rule=Host(`grafana.tracing.ВАШ%ДОМЕН.local`)"
      - "traefik.docker.network=tracing-net"
      - "traefik.port=80"
    depends_on:
      - prometheus
    ports:
      - 3000:3000
    volumes:
      - ./grafana:/var/lib/grafana
      - ./grafana/provisioning/:/etc/grafana/provisioning/
    networks:
      - tracing-net
    restart: always

  jaeger:
    image: jaegertracing/all-in-one:latest
    container_name: jaeger
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.jaeger.entrypoints=http"
      - "traefik.http.routers.jaeger.rule=Host(`jaeger.tracing.ВАШ%ДОМЕН.local`)"
      - "traefik.docker.network=tracing-net"
      - "traefik.http.services.jaeger.loadbalancer.server.port=16686"
    ports:
      - "5775:5775/udp"
      - "6831:6831/udp"
      - "6832:6832/udp"
      - "5778:5778"
      - "16686:16686"
      - "14268:14268"
      - "9411:9411"
    networks:
      - tracing-net
    restart: always

  minio:
    image: minio/minio:latest
    container_name: minio
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.minio.entrypoints=http"
      - "traefik.http.routers.minio.rule=Host(`minio.tracing.ВАШ%ДОМЕН.local`)"
      - "traefik.docker.network=tracing-net"
      - "traefik.port=80"      
    volumes:
      - /opt/tracing/minio/data:/export
      - /opt/tracing/minio:/root/.minio
    command: server /export
    ports:
      - 9000:9000
    environment:
      MINIO_ACCESS_KEY: minio
      MINIO_SECRET_KEY: 234kP543
    networks:
      - tracing-net
    restart: always

  portainer:
    image: portainer/portainer:latest
    container_name: portainer
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.portainer.entrypoints=http"
      - "traefik.http.routers.portainer.rule=Host(`portainer.tracing.ВАШ%ДОМЕН.local`)"
      - "traefik.docker.network=tracing-net"
      - "traefik.port=80"
    ports:
      - 9010:9000
#      - 8010:8000
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./portainer:/data
    command: -H unix:///var/run/docker.sock
    networks:
      - tracing-net
    restart: always

#  nginx:
#    image: nginx:latest
#    depends_on:
#      - prometheus
#      - grafana
#      - jaeger
#      - minio
#    volumes:
#      - /opt/tracing/nginx/rev_proxy.conf:/etc/nginx/conf.d/default.conf
#    ports:
#      - 80:80
#      - 443:443
#    networks:
#      - tracing-net
#    restart: always

  traefik:
    image: traefik:v2.2
    container_name: traefik
    security_opt:
      - no-new-privileges:true
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.traefik.entrypoints=http"
      - "traefik.http.routers.traefik.rule=Host(`traefik.tracing.ВАШ%ДОМЕН.local`)"
      - "traefik.http.routers.traefik.tls=false"
#      - "traefik.http.routers.traefik.tls.certresolver=letsEncrypt"
      - "traefik.http.routers.traefik.service=api@internal"
      - "traefik.http.services.traefik-traefik.loadbalancer.server.port=888"
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./traefik/traefik.yml:/traefik.yml:ro
#      - ./traefik/acme.json:/acme.json
    ports:
      - 80:80
      - 443:443
    networks:
      - tracing-net
    restart: always
